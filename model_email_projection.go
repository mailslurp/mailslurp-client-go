/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * API version: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package MailSlurpClient
import (
	"time"
)
// EmailProjection A compact representation of a full email. Used in list endpoints to keep response sizes low. Body and attachments are not included. To get all fields of the email use the `getEmail` method with the email projection's ID. See `EmailDto` for documentation on projection properties.
type EmailProjection struct {
	Recipients *EmailRecipients `json:"recipients,omitempty"`
	Sender *Sender `json:"sender,omitempty"`
	Attachments *[]string `json:"attachments,omitempty"`
	InboxId string `json:"inboxId"`
	CreatedAt time.Time `json:"createdAt"`
	To []string `json:"to"`
	Cc *[]string `json:"cc,omitempty"`
	Bcc *[]string `json:"bcc,omitempty"`
	MessageId *string `json:"messageId,omitempty"`
	DomainId *string `json:"domainId,omitempty"`
	Favourite *bool `json:"favourite,omitempty"`
	PlusAddress *string `json:"plusAddress,omitempty"`
	SizeBytes *int64 `json:"sizeBytes,omitempty"`
	InReplyTo *string `json:"inReplyTo,omitempty"`
	Read bool `json:"read"`
	BodyExcerpt *string `json:"bodyExcerpt,omitempty"`
	TextExcerpt *string `json:"textExcerpt,omitempty"`
	BodyPartContentTypes *[]string `json:"bodyPartContentTypes,omitempty"`
	BodyMD5Hash *string `json:"bodyMD5Hash,omitempty"`
	TeamAccess bool `json:"teamAccess"`
	Subject *string `json:"subject,omitempty"`
	Id string `json:"id"`
	ThreadId *string `json:"threadId,omitempty"`
	From *string `json:"from"`
}
