/*
 * MailSlurp API
 *
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * API version: 6.5.2
 * Contact: contact@mailslurp.dev
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package MailSlurpClient
import (
	"time"
)
// WebhookDeliveryStatusPayload DELIVERY_STATUS webhook payload. Sent to your webhook url endpoint via HTTP POST when an email delivery status is created. This could be a successful delivery or a delivery failure.
type WebhookDeliveryStatusPayload struct {
	// Idempotent message ID. Store this ID locally or in a database to prevent message duplication.
	MessageId string `json:"messageId"`
	// ID of webhook entity being triggered
	WebhookId string `json:"webhookId"`
	// Name of the event type webhook is being triggered for.
	EventName string `json:"eventName"`
	// Name of the webhook being triggered
	WebhookName *string `json:"webhookName,omitempty"`
	// ID of delivery status
	Id string `json:"id"`
	// User ID of event
	UserId string `json:"userId"`
	// ID of sent email
	SentId *string `json:"sentId,omitempty"`
	// IP address of the remote Mail Transfer Agent
	RemoteMtaIp *string `json:"remoteMtaIp,omitempty"`
	// Id of the inbox
	InboxId *string `json:"inboxId,omitempty"`
	// Mail Transfer Agent reporting delivery status
	ReportingMta *string `json:"reportingMta,omitempty"`
	// Recipients for delivery
	Recipients *[]string `json:"recipients,omitempty"`
	// SMTP server response message
	SmtpResponse *string `json:"smtpResponse,omitempty"`
	// SMTP server status
	SmtpStatusCode *int32 `json:"smtpStatusCode,omitempty"`
	// Time in milliseconds for delivery processing
	ProcessingTimeMillis *int64 `json:"processingTimeMillis,omitempty"`
	// Time event was received
	Received *time.Time `json:"received,omitempty"`
	// Email subject
	Subject *string `json:"subject,omitempty"`
}
